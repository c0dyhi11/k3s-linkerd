---
apiVersion: v1
data:
  authtoken: ${auth_token}
kind: Secret
metadata:
  name: cluster-autoscaler-packet
  namespace: kube-system
type: Opaque
---
apiVersion: v1
kind: Secret
metadata:
  name: cluster-autoscaler-cloud-config
  namespace: kube-system
type: Opaque
stringData:
  cloud-config: |-
    [Global]
    project-id=${project_id}
    api-server-endpoint=${master_ip}:${api_port}
    facility=${facility}
    os=${operating_system}
    plan=${plan}
    billing=${billing_cycle}
    cloudinit=__USER_DATA__
    reservation=prefer
    hostname-pattern=k8s-{{.ClusterName}}-{{.NodeGroup}}-{{.RandString8}}
---
# The following secret is only required when using bootstrap tokens in cloudinit
# like in the above example. For more info on bootstrap tokens check
# https://kubernetes.io/docs/reference/access-authn-authz/bootstrap-tokens/
# IMPORTANT: change the token-id & token-secret values below before applying
apiVersion: v1
kind: Secret
type: bootstrap.kubernetes.io/token
metadata:
  name: bootstrap-token-cluster-autoscaler-packet
  namespace: kube-system
stringData:
  description: "The default bootstrap token used by cluster-autoscaler on Packet."

  # Token ID and secret. Required if using bootstrap tokens in cloudinit (e.g. with kubeadm).
  # token-id must match the regular expression [a-z0-9]{6}
  token-id: YOUR_TOKEN_ID
  # token-secret must match the regular expression [a-z0-9]{16}
  token-secret: YOUR_TOKEN_SECRET

  # Expiration. Optional.
  # expiration: 2020-03-10T03:22:11Z

  # Allowed usages.
  usage-bootstrap-authentication: "true"
  usage-bootstrap-signing: "true"

  # Extra groups to authenticate the token as. Must start with "system:bootstrappers:"
  auth-extra-groups: system:bootstrappers:kubeadm:default-node-token,system:bootstrappers:worker,system:bootstrappers:ingress
